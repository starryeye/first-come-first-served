# docker-compose -p coupon-kafka up -d

# 터미널로 직접 실습
# 1. 토픽 생성
# docker exec -it coupon-kafka kafka-topics.sh --bootstrap-server localhost:9092 --create --topic testTopic
# 2. 프로듀서 실행
# docker exec -it coupon-kafka kafka-console-producer.sh --topic testTopic --broker-list 0.0.0.0:9092
# 3. 컨슈머 실행
# docker exec -it coupon-kafka kafka-console-consumer.sh --topic testTopic --bootstrap-server localhost:9092
# 4. 토픽 삭제
# docker exec -it coupon-kafka kafka-topics.sh --bootstrap-server localhost:9092 --delete --topic testTopic

# coupon-create topic 생성
# docker exec -it coupon-kafka kafka-topics.sh --bootstrap-server localhost:9092 --create --topic coupon-create
# consumer 로 확인
# docker exec -it coupon-kafka kafka-console-consumer.sh --topic coupon-create --bootstrap-server localhost:9092 --key-deserializer "org.apache.kafka.common.serialization.StringDeserializer" --value-deserializer "org.apache.kafka.common.serialization.LongDeserializer"


version: '2'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: coupon-zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
  kafka:
    image: bitnami/kafka:latest
    container_name: coupon-kafka
    ports:
      - "9092:9092"
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: coupon-zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock